<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kavindu Udara</title>
    <link>https://kavindu-udara.github.io/me/</link>
    <description>Recent content on Kavindu Udara</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 01 Dec 2024 21:44:35 +0530</lastBuildDate>
    <atom:link href="https://kavindu-udara.github.io/me/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Deploying a React App</title>
      <link>https://kavindu-udara.github.io/me/posts/deploying-a-react-app/</link>
      <pubDate>Sun, 01 Dec 2024 21:44:35 +0530</pubDate>
      <guid>https://kavindu-udara.github.io/me/posts/deploying-a-react-app/</guid>
      <description>&lt;p&gt;Deploying a React app involves several steps to prepare the app for production, including optimizing the build, configuring deployment settings, and choosing a hosting platform. This note focuses on the preparation of a React app for production using the &lt;code&gt;npm run build&lt;/code&gt; command, which creates an optimized version of your app for deployment.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;1-preparing-the-app-for-production-using-npm-run-build&#34;&gt;1. Preparing the App for Production Using &lt;code&gt;npm run build&lt;/code&gt;&lt;/h3&gt;&#xA;&lt;p&gt;When youâ€™re ready to deploy your React app, the first step is to create a &lt;strong&gt;production build&lt;/strong&gt;. React provides a command &lt;code&gt;npm run build&lt;/code&gt; that bundles your app into static files optimized for performance. This build includes minified JavaScript, optimized assets, and a structure that can be served by a static server.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Styling in React</title>
      <link>https://kavindu-udara.github.io/me/posts/styling-in-react/</link>
      <pubDate>Sun, 01 Dec 2024 21:42:01 +0530</pubDate>
      <guid>https://kavindu-udara.github.io/me/posts/styling-in-react/</guid>
      <description>&lt;p&gt;In React, styling can be done in multiple ways depending on your preferences and the requirements of the project. You can use inline styles, external CSS, CSS Modules, or even CSS-in-JS solutions like &lt;strong&gt;Styled Components&lt;/strong&gt; and utility-first frameworks like &lt;strong&gt;Tailwind CSS&lt;/strong&gt;. This note will explore these approaches and when to use each.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;1-inline-styles-vs-external-css-vs-css-modules&#34;&gt;1. Inline Styles vs External CSS vs CSS Modules&lt;/h3&gt;&#xA;&lt;h4 id=&#34;11-inline-styles&#34;&gt;1.1 Inline Styles&lt;/h4&gt;&#xA;&lt;p&gt;Inline styles are applied directly within a component using a JavaScript object. Each style property is written in camelCase instead of hyphenated format.&lt;/p&gt;</description>
    </item>
    <item>
      <title>React Lifecycle and Hooks</title>
      <link>https://kavindu-udara.github.io/me/posts/react-lifecycle-and-hooks/</link>
      <pubDate>Sun, 01 Dec 2024 21:40:04 +0530</pubDate>
      <guid>https://kavindu-udara.github.io/me/posts/react-lifecycle-and-hooks/</guid>
      <description>&lt;p&gt;React hooks allow functional components to manage side effects, state, and other lifecycle events. The introduction of hooks has simplified component lifecycle management and enabled functional components to become more powerful and feature-rich.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;1-introduction-to-react-hooks&#34;&gt;1. Introduction to React Hooks&lt;/h3&gt;&#xA;&lt;p&gt;React hooks are functions that allow you to &amp;ldquo;hook into&amp;rdquo; React features from functional components. They provide a more declarative approach to handling component logic compared to class components. The most commonly used hooks are:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Lists and Keys in React</title>
      <link>https://kavindu-udara.github.io/me/posts/lists-and-keys-in-react/</link>
      <pubDate>Sun, 01 Dec 2024 21:37:30 +0530</pubDate>
      <guid>https://kavindu-udara.github.io/me/posts/lists-and-keys-in-react/</guid>
      <description>&lt;p&gt;Rendering lists in React is common for displaying multiple items dynamically. React provides a built-in way to efficiently render lists using JavaScript array methods like &lt;code&gt;.map()&lt;/code&gt;. Additionally, using &lt;strong&gt;keys&lt;/strong&gt; is important for optimizing rendering and maintaining state in lists.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h4 id=&#34;1-rendering-lists-with-map&#34;&gt;1. Rendering Lists with &lt;code&gt;.map()&lt;/code&gt;&lt;/h4&gt;&#xA;&lt;p&gt;In React, the &lt;code&gt;.map()&lt;/code&gt; function is commonly used to iterate over an array of data and return an array of elements that can be rendered. This is especially useful for rendering dynamic data like lists of items.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Conditional Rendering in React</title>
      <link>https://kavindu-udara.github.io/me/posts/conditional-rendering-in-react/</link>
      <pubDate>Sun, 01 Dec 2024 21:35:23 +0530</pubDate>
      <guid>https://kavindu-udara.github.io/me/posts/conditional-rendering-in-react/</guid>
      <description>&lt;p&gt;Conditional rendering allows components to decide what to display based on certain conditions. React provides several ways to implement conditional rendering, making it easy to display different UI elements based on the state or props of a component.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;1-using-if-else-statements&#34;&gt;1. Using &lt;code&gt;if-else&lt;/code&gt; Statements&lt;/h3&gt;&#xA;&lt;p&gt;You can use standard JavaScript &lt;code&gt;if-else&lt;/code&gt; statements for conditional rendering within a component. Typically, you would do this outside of the JSX return statement, such as within the render function or directly before the return.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Event Handling in React</title>
      <link>https://kavindu-udara.github.io/me/posts/event-handling-in-react/</link>
      <pubDate>Sun, 01 Dec 2024 21:33:30 +0530</pubDate>
      <guid>https://kavindu-udara.github.io/me/posts/event-handling-in-react/</guid>
      <description>&lt;p&gt;React provides a way to handle user interactions such as clicks, form submissions, and other events using event handlers. These handlers work similarly to JavaScript event listeners but are optimized for React&amp;rsquo;s virtual DOM.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;1-handling-events-in-react&#34;&gt;1. Handling Events in React&lt;/h3&gt;&#xA;&lt;h5 id=&#34;key-points&#34;&gt;Key Points:&lt;/h5&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Event handlers in React are written as camelCase (e.g., &lt;code&gt;onClick&lt;/code&gt;, &lt;code&gt;onChange&lt;/code&gt;).&lt;/li&gt;&#xA;&lt;li&gt;Handlers are passed as functions, not strings (e.g., &lt;code&gt;onClick={() =&amp;gt; alert(&#39;Clicked!&#39;)}&lt;/code&gt;).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h5 id=&#34;common-event-handlers&#34;&gt;Common Event Handlers&lt;/h5&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Click Events&lt;/strong&gt;: Triggered when an element is clicked.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Input Events&lt;/strong&gt;: Triggered when input fields change.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Form Events&lt;/strong&gt;: Triggered during form submission.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h4 id=&#34;handling-click-events&#34;&gt;Handling Click Events&lt;/h4&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-jsx&#34; data-lang=&#34;jsx&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ClickHandler&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;handleClick&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; () =&amp;gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;alert&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Button clicked!&amp;#39;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    };&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;button&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;onClick&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{&lt;span style=&#34;color:#a6e22e&#34;&gt;handleClick&lt;/span&gt;}&amp;gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Click&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Me&lt;/span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;button&lt;/span&gt;&amp;gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;&#xA;&lt;h4 id=&#34;handling-input-events&#34;&gt;Handling Input Events&lt;/h4&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-jsx&#34; data-lang=&#34;jsx&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;InputHandler&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;handleChange&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;event&lt;/span&gt;) =&amp;gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;console&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;event&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;target&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;value&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    };&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;input&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;text&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;onChange&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{&lt;span style=&#34;color:#a6e22e&#34;&gt;handleChange&lt;/span&gt;} /&amp;gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;&#xA;&lt;h3 id=&#34;handling-form-submission&#34;&gt;Handling Form Submission&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-jsx&#34; data-lang=&#34;jsx&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;FormHandler&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;handleSubmit&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;event&lt;/span&gt;) =&amp;gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;event&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;preventDefault&lt;/span&gt;(); &lt;span style=&#34;color:#75715e&#34;&gt;// Prevents default form submission behavior&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;alert&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Form submitted!&amp;#39;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    };&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; (&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;form&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;onSubmit&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{&lt;span style=&#34;color:#a6e22e&#34;&gt;handleSubmit&lt;/span&gt;}&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;button&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;submit&amp;#34;&lt;/span&gt;&amp;gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Submit&lt;/span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;button&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;form&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    );&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;&#xA;&lt;h3 id=&#34;2-event-binding-and-passing-data-with-event-handlers&#34;&gt;2. Event Binding and Passing Data with Event Handlers&lt;/h3&gt;&#xA;&lt;h4 id=&#34;event-binding&#34;&gt;Event Binding&lt;/h4&gt;&#xA;&lt;p&gt;In React, event handlers automatically bind to the component instance, so you usually don&amp;rsquo;t need explicit binding as in class components. However, in class components, you can bind methods in three ways:&lt;/p&gt;</description>
    </item>
    <item>
      <title>State in React</title>
      <link>https://kavindu-udara.github.io/me/posts/state-in-react/</link>
      <pubDate>Sun, 01 Dec 2024 21:31:26 +0530</pubDate>
      <guid>https://kavindu-udara.github.io/me/posts/state-in-react/</guid>
      <description>&lt;p&gt;&lt;strong&gt;State&lt;/strong&gt; is used to manage data that changes within a component. Unlike props, state is &lt;strong&gt;mutable&lt;/strong&gt; and controlled by the component itself.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;using-the-usestate-hook&#34;&gt;Using the &lt;code&gt;useState&lt;/code&gt; Hook&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Import &lt;code&gt;useState&lt;/code&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-jsx&#34; data-lang=&#34;jsx&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; { &lt;span style=&#34;color:#a6e22e&#34;&gt;useState&lt;/span&gt; } &lt;span style=&#34;color:#a6e22e&#34;&gt;from&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;react&amp;#39;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Initialize state&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-jsx&#34; data-lang=&#34;jsx&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; [&lt;span style=&#34;color:#a6e22e&#34;&gt;count&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;setCount&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;useState&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Update state&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-jsx&#34; data-lang=&#34;jsx&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setCount&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;count&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;example-of-state&#34;&gt;Example of State&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-jsx&#34; data-lang=&#34;jsx&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Counter&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; [&lt;span style=&#34;color:#a6e22e&#34;&gt;count&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;setCount&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;useState&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; (&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Count&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {&lt;span style=&#34;color:#a6e22e&#34;&gt;count&lt;/span&gt;}&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;button&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;onClick&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{() =&amp;gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setCount&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;count&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)}&amp;gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Increment&lt;/span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;button&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    );&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;&#xA;&lt;h3 id=&#34;updating-and-managing-state&#34;&gt;Updating and Managing State&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Updating State&lt;/p&gt;</description>
    </item>
    <item>
      <title>Props in React</title>
      <link>https://kavindu-udara.github.io/me/posts/props-in-react/</link>
      <pubDate>Sun, 01 Dec 2024 21:29:05 +0530</pubDate>
      <guid>https://kavindu-udara.github.io/me/posts/props-in-react/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Props&lt;/strong&gt; (short for properties) are used to pass data from a parent component to a child component. Props are &lt;strong&gt;read-only&lt;/strong&gt;, meaning they cannot be modified by the child component receiving them.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;key-features-of-props&#34;&gt;Key Features of Props&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Passed as an object to the component.&lt;/li&gt;&#xA;&lt;li&gt;Immutable (cannot be changed by the component receiving them).&lt;/li&gt;&#xA;&lt;li&gt;Used for dynamic data and reusability.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;how-to-pass-props-between-components&#34;&gt;How to Pass Props Between Components&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Define props in the parent component&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-jsx&#34; data-lang=&#34;jsx&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Parent&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;John&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;Child&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{&lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;} /&amp;gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Access props in the child component&lt;/p&gt;</description>
    </item>
    <item>
      <title>Components in React</title>
      <link>https://kavindu-udara.github.io/me/posts/components-in-react/</link>
      <pubDate>Sun, 01 Dec 2024 21:25:51 +0530</pubDate>
      <guid>https://kavindu-udara.github.io/me/posts/components-in-react/</guid>
      <description>&lt;p&gt;React components are the building blocks of React applications. They allow developers to break the UI into reusable, independent pieces.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;functional-components-vs-class-components&#34;&gt;Functional Components vs Class Components&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;strong&gt;Aspect&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;strong&gt;Functional Components&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;strong&gt;Class Components&lt;/strong&gt;&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Definition&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Plain JavaScript functions that return JSX.&lt;/td&gt;&#xA;          &lt;td&gt;ES6 classes that extend &lt;code&gt;React.Component&lt;/code&gt;.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;State&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Uses the &lt;code&gt;useState&lt;/code&gt; and &lt;code&gt;useEffect&lt;/code&gt; hooks (introduced in React 16.8).&lt;/td&gt;&#xA;          &lt;td&gt;Uses &lt;code&gt;this.state&lt;/code&gt; for managing state.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Lifecycle Methods&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Replaced by hooks like &lt;code&gt;useEffect&lt;/code&gt;.&lt;/td&gt;&#xA;          &lt;td&gt;Explicit lifecycle methods like &lt;code&gt;componentDidMount&lt;/code&gt;.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Syntax&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Simpler and more concise.&lt;/td&gt;&#xA;          &lt;td&gt;More verbose due to class structure.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Performance&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Generally lighter and faster.&lt;/td&gt;&#xA;          &lt;td&gt;Slightly heavier because of class overhead.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Functional Component:&lt;/td&gt;&#xA;          &lt;td&gt;Class Component:&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;```jsx&lt;/td&gt;&#xA;          &lt;td&gt;```jsx&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;function Greet() {&lt;/td&gt;&#xA;          &lt;td&gt;class Greet extends React.Component {&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;return &lt;code&gt;&amp;lt;h1&amp;gt;Hello&amp;lt;/h1&amp;gt;&lt;/code&gt;;&lt;/td&gt;&#xA;          &lt;td&gt;render() {&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;}&lt;/td&gt;&#xA;          &lt;td&gt;return &lt;code&gt;&amp;lt;h1&amp;gt;Hello&amp;lt;/h1&amp;gt;&lt;/code&gt;;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;```&lt;/td&gt;&#xA;          &lt;td&gt;}&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;when-to-use&#34;&gt;When to Use?&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Use functional components whenever possible; they are the modern and preferred approach. Class components are now rarely used in new projects.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;how-to-create-and-export-components&#34;&gt;How to Create and Export Components&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Creating a Functional Component&lt;/p&gt;</description>
    </item>
    <item>
      <title>What Is JSX, TSX and How It Differs From HTML</title>
      <link>https://kavindu-udara.github.io/me/posts/what-is-jsx-tsx-and-how-it-differs-from-html/</link>
      <pubDate>Sun, 01 Dec 2024 21:18:48 +0530</pubDate>
      <guid>https://kavindu-udara.github.io/me/posts/what-is-jsx-tsx-and-how-it-differs-from-html/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;JSX (JavaScript XML)&lt;/strong&gt;: A syntax extension for JavaScript used in React to describe the UI structure.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;TSX (TypeScript XML)&lt;/strong&gt;: Similar to JSX but used in React projects with TypeScript for type safety.&lt;/li&gt;&#xA;&lt;li&gt;Both allow developers to write code that looks like HTML, but they are not HTMLâ€”they are syntactic sugar that gets transpiled into JavaScript.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;key-differences-between-jsxtsx-and-html&#34;&gt;Key Differences Between JSX/TSX and HTML&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;strong&gt;Feature&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;strong&gt;JSX/TSX&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;strong&gt;HTML&lt;/strong&gt;&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Syntax&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Combines JavaScript/TypeScript with XML-like tags.&lt;/td&gt;&#xA;          &lt;td&gt;Pure markup language.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Attributes&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Uses &lt;code&gt;camelCase&lt;/code&gt; (e.g., &lt;code&gt;className&lt;/code&gt;, &lt;code&gt;onClick&lt;/code&gt;).&lt;/td&gt;&#xA;          &lt;td&gt;Uses standard HTML attributes (e.g., &lt;code&gt;class&lt;/code&gt;, &lt;code&gt;onclick&lt;/code&gt;).&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Dynamic Content&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Allows embedding of JavaScript expressions using &lt;code&gt;{}&lt;/code&gt;.&lt;/td&gt;&#xA;          &lt;td&gt;Requires separate scripting with &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tags.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Rendering&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Transpiles to &lt;code&gt;React.createElement()&lt;/code&gt; calls to render the DOM.&lt;/td&gt;&#xA;          &lt;td&gt;Directly rendered by the browser.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Custom Components&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Supports reusable React components as tags.&lt;/td&gt;&#xA;          &lt;td&gt;Does not support custom tags unless extended by frameworks.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Type Safety&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;TSX supports type-checking for props and components.&lt;/td&gt;&#xA;          &lt;td&gt;HTML has no type-checking capabilities.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;jsxtsx-attributes-and-how-to-use-them&#34;&gt;JSX/TSX Attributes and How to Use Them&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Commonly Used Attributes&lt;/p&gt;</description>
    </item>
    <item>
      <title>Setting Up the Development Environment for React With Vite</title>
      <link>https://kavindu-udara.github.io/me/posts/setting-up-the-development-environment-for-react-with-vite/</link>
      <pubDate>Sun, 01 Dec 2024 21:08:32 +0530</pubDate>
      <guid>https://kavindu-udara.github.io/me/posts/setting-up-the-development-environment-for-react-with-vite/</guid>
      <description>&lt;h3 id=&#34;1-installing-nodejs-and-npm&#34;&gt;1. Installing Node.js and npm&lt;/h3&gt;&#xA;&lt;p&gt;Node.js and npm (Node Package Manager) are prerequisites for creating and running React applications.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;Download and Install Node.js&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Visit the &lt;a href=&#34;https://nodejs.org&#34;&gt;Node.js official website&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Download the &lt;strong&gt;LTS&lt;/strong&gt; version for stability.&lt;/li&gt;&#xA;&lt;li&gt;Follow the installation instructions for your operating system.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Verify Installation&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Open a terminal and run the following commands:&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;node -v&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;npm -v&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;These commands will display the installed versions of Node.js and npm.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;2-setting-up-a-react-project&#34;&gt;2. Setting up a React Project&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Install Vite&#xA;Vite is a fast frontend build tool.&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Open a terminal and run&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;npm create vite@latest my-react-app --template react&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;- Replace `my-react-app` with your desired project name.&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;Navigate to the Project Directory&lt;/strong&gt;:&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd my-react-app&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;3&#34;&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Install Dependencies&lt;/strong&gt;&#xA;Run the following command to install all the dependencies&lt;/p&gt;</description>
    </item>
    <item>
      <title>Real World Examples of Apps Build With React</title>
      <link>https://kavindu-udara.github.io/me/posts/real-world-examples-of-apps-build-with-react/</link>
      <pubDate>Sun, 01 Dec 2024 20:58:46 +0530</pubDate>
      <guid>https://kavindu-udara.github.io/me/posts/real-world-examples-of-apps-build-with-react/</guid>
      <description>&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;&lt;strong&gt;Application&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/th&gt;&#xA;          &lt;th&gt;&lt;strong&gt;Key Features&lt;/strong&gt;&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Facebook&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Social media platform, React&amp;rsquo;s origin.&lt;/td&gt;&#xA;          &lt;td&gt;News feed, notifications, live chat, real-time updates, and interactive UI.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Instagram&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Photo and video sharing platform owned by Meta.&lt;/td&gt;&#xA;          &lt;td&gt;Stories, filters, reels, dynamic user feeds, and push notifications.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;WhatsApp Web&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Web version of the popular messaging app.&lt;/td&gt;&#xA;          &lt;td&gt;Real-time messaging, live updates, QR login, and responsive design.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Netflix&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Streaming platform for movies and TV shows.&lt;/td&gt;&#xA;          &lt;td&gt;Dynamic user interface, personalized recommendations, and optimized streaming experiences.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Airbnb&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Marketplace for lodging, primarily short-term rentals.&lt;/td&gt;&#xA;          &lt;td&gt;Interactive maps, real-time search results, and responsive layouts for booking accommodations.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Uber&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Ridesharing platform for booking cabs and delivery services.&lt;/td&gt;&#xA;          &lt;td&gt;Live tracking, dynamic pricing, and real-time updates.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Pinterest&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Visual discovery engine for sharing ideas and inspirations.&lt;/td&gt;&#xA;          &lt;td&gt;Infinite scrolling, dynamic pin recommendations, and smooth user interactions.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Slack&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Collaboration platform for messaging and workplace tools.&lt;/td&gt;&#xA;          &lt;td&gt;Real-time messaging, file sharing, and integrated third-party tools.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Shopify&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;E-commerce platform for businesses to create online stores.&lt;/td&gt;&#xA;          &lt;td&gt;Dynamic dashboards, real-time inventory updates, and responsive store designs.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Discord&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Voice, video, and text communication platform for communities and gamers.&lt;/td&gt;&#xA;          &lt;td&gt;Real-time messaging, custom UIs for servers, and seamless voice/video integration.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Dropbox&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Cloud storage platform for storing and sharing files.&lt;/td&gt;&#xA;          &lt;td&gt;Interactive UI for file uploads, drag-and-drop functionality, and real-time collaboration tools.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Trello&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Project management tool for task organization.&lt;/td&gt;&#xA;          &lt;td&gt;Drag-and-drop Kanban boards, real-time updates, and interactive UI elements.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Asana&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Task and project management application for teams.&lt;/td&gt;&#xA;          &lt;td&gt;Real-time task tracking, dynamic boards, and visual project timelines.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;BBC&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;News website offering global and local news.&lt;/td&gt;&#xA;          &lt;td&gt;Dynamic content updates, real-time notifications, and seamless video playback.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Medium&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Blogging platform for writers and readers.&lt;/td&gt;&#xA;          &lt;td&gt;Interactive editor, personalized reading lists, and infinite scrolling for articles.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Khan Academy&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Online learning platform offering free courses and lessons.&lt;/td&gt;&#xA;          &lt;td&gt;Interactive learning tools, real-time quizzes, and progress tracking.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;GitHub (Front End)&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Code hosting platform for version control and collaboration.&lt;/td&gt;&#xA;          &lt;td&gt;Interactive dashboards, real-time updates on pull requests, and code comparison tools.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;CodeSandbox&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Online code editor for web development.&lt;/td&gt;&#xA;          &lt;td&gt;Real-time collaborative editing, live previews, and seamless integration with GitHub.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Spotify (Web Player)&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;Music streaming platform for discovering and playing music.&lt;/td&gt;&#xA;          &lt;td&gt;Real-time search, dynamic playlists, and audio playback optimization.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;These examples showcase React&amp;rsquo;s versatility in building scalable, interactive, and high-performing applications across various domains like social media, e-commerce, streaming, and productivity tools.&lt;/p&gt;</description>
    </item>
    <item>
      <title>React Virtual DOM</title>
      <link>https://kavindu-udara.github.io/me/posts/react-virtual-dom/</link>
      <pubDate>Sun, 01 Dec 2024 20:54:27 +0530</pubDate>
      <guid>https://kavindu-udara.github.io/me/posts/react-virtual-dom/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;The &lt;strong&gt;Virtual DOM (VDOM)&lt;/strong&gt; is a lightweight in-memory representation of the real DOM.&lt;/li&gt;&#xA;&lt;li&gt;React uses the VDOM to manage updates efficiently without directly manipulating the real DOM.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;key-concepts&#34;&gt;Key Concepts&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;The actual structure rendered in the browser.&lt;/li&gt;&#xA;&lt;li&gt;Updating it is slow because it triggers reflows and repaints.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;how-the-virtual-dom-works&#34;&gt;How the Virtual DOM Works&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Initial Render&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;React creates a VDOM representation of the UI.&lt;/li&gt;&#xA;&lt;li&gt;The VDOM is then used to create the real DOM for the browser.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Updating State or Props&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;React creates a new VDOM tree based on the updated state/props.&lt;/li&gt;&#xA;&lt;li&gt;It compares the new VDOM tree with the previous one (a process called &lt;strong&gt;diffing&lt;/strong&gt;).&lt;/li&gt;&#xA;&lt;li&gt;Only the differences (changes) are applied to the real DOM.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Efficient Updates&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;React batches multiple updates and applies them in one operation to minimize performance costs.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;benefits-of-the-virtual-dom&#34;&gt;Benefits of the Virtual DOM&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Performance&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Reduces direct interactions with the real DOM.&lt;/li&gt;&#xA;&lt;li&gt;Optimizes updates by calculating the smallest number of changes.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Declarative UI&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Developers focus on what the UI should look like, and React handles how to update the DOM.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Cross-Browser Compatibility&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;React abstracts browser-specific quirks in DOM manipulation.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;real-life-analogy&#34;&gt;Real-Life Analogy&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Think of updating the DOM like editing a book.&lt;/li&gt;&#xA;&lt;li&gt;Instead of rewriting the entire book (real DOM), React keeps a draft copy (virtual DOM), compares the draft with the original, and only updates the changed parts.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;virtual-dom-diffing-algorithm&#34;&gt;Virtual DOM Diffing Algorithm&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Tree Comparison&lt;/strong&gt;: React compares the new VDOM tree with the old one.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Key-Based Optimization&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Keys in lists help React identify moved or updated elements efficiently.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Minimal Updates&lt;/strong&gt;:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;React calculates and applies only the minimal required changes to the real DOM.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;example&#34;&gt;Example&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-jsx&#34; data-lang=&#34;jsx&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;App&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; [&lt;span style=&#34;color:#a6e22e&#34;&gt;count&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;setCount&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;React&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;useState&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; (&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Count&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {&lt;span style=&#34;color:#a6e22e&#34;&gt;count&lt;/span&gt;}&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;button&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;onClick&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{() =&amp;gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setCount&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;count&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)}&amp;gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Increment&lt;/span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;button&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    );&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;When the button is clicked:&lt;/p&gt;</description>
    </item>
    <item>
      <title>React Reusable Components</title>
      <link>https://kavindu-udara.github.io/me/posts/react-reusable-components/</link>
      <pubDate>Sun, 01 Dec 2024 20:41:07 +0530</pubDate>
      <guid>https://kavindu-udara.github.io/me/posts/react-reusable-components/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;Reusable components are building blocks of a React application designed to be reused in multiple places.&lt;/li&gt;&#xA;&lt;li&gt;They promote modularity, maintainability, and efficiency.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;key-benefits&#34;&gt;Key Benefits&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Code Reusability&lt;/strong&gt;: Write once, use multiple times.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Consistency&lt;/strong&gt;: Maintain consistent design and behavior across the app.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Ease of Maintenance&lt;/strong&gt;: Updates to a component reflect across all its instances.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Efficiency&lt;/strong&gt;: Reduces the need for duplicate code.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;best-practices-for-creating-reusable-components&#34;&gt;Best Practices for Creating Reusable Components&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Single Responsibility Principle&lt;/strong&gt;: Each component should have one clear purpose.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Props&lt;/strong&gt;: Use props to make components configurable and dynamic.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Composition Over Inheritance&lt;/strong&gt;: Combine smaller components to build larger ones.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Avoid Hardcoding&lt;/strong&gt;: Parameterize data through props instead of hardcoding values.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Styling Flexibility&lt;/strong&gt;: Use CSS modules, styled-components, or className props for flexible styling.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Granularity&lt;/strong&gt;: Balance between too granular (many small components) and too monolithic (large components).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;examples-of-reusable-components&#34;&gt;Examples of Reusable Components&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Button&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-jsx&#34; data-lang=&#34;jsx&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Button&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ({ &lt;span style=&#34;color:#a6e22e&#34;&gt;onClick&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;children&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;style&lt;/span&gt; }) =&amp;gt; (&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;button&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;onClick&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{&lt;span style=&#34;color:#a6e22e&#34;&gt;onClick&lt;/span&gt;} &lt;span style=&#34;color:#a6e22e&#34;&gt;style&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{&lt;span style=&#34;color:#a6e22e&#34;&gt;style&lt;/span&gt;}&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {&lt;span style=&#34;color:#a6e22e&#34;&gt;children&lt;/span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;button&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;Input Field&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-jsx&#34; data-lang=&#34;jsx&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Input&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ({ &lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;value&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;onChange&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;placeholder&lt;/span&gt; }) =&amp;gt; (&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;input&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{&lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{&lt;span style=&#34;color:#a6e22e&#34;&gt;value&lt;/span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;onChange&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{&lt;span style=&#34;color:#a6e22e&#34;&gt;onChange&lt;/span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;placeholder&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{&lt;span style=&#34;color:#a6e22e&#34;&gt;placeholder&lt;/span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    /&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;3&#34;&gt;&#xA;&lt;li&gt;Card&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-jsx&#34; data-lang=&#34;jsx&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Card&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ({ &lt;span style=&#34;color:#a6e22e&#34;&gt;children&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;style&lt;/span&gt; }) =&amp;gt; (&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;style&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{{ ...&lt;span style=&#34;color:#a6e22e&#34;&gt;defaultStyle&lt;/span&gt;, ...&lt;span style=&#34;color:#a6e22e&#34;&gt;style&lt;/span&gt; }}&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {&lt;span style=&#34;color:#a6e22e&#34;&gt;children&lt;/span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;defaultStyle&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;border&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1px solid #ccc&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;padding&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;10px&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;borderRadius&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;5px&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;&#xA;&lt;h3 id=&#34;tips&#34;&gt;Tips&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Test Components&lt;/strong&gt;: Ensure each component works in isolation.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Prop Validation&lt;/strong&gt;: Use &lt;code&gt;PropTypes&lt;/code&gt; or TypeScript for better validation and type safety.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Document Components&lt;/strong&gt;: Add comments or maintain documentation to explain usage.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;references&#34;&gt;References&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.freecodecamp.org/news/how-to-build-reusable-react-components/&#34;&gt;https://www.freecodecamp.org/news/how-to-build-reusable-react-components/&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://buttercms.com/blog/building-reusable-components-using-react/&#34;&gt;https://buttercms.com/blog/building-reusable-components-using-react/&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>React Fundamentals</title>
      <link>https://kavindu-udara.github.io/me/posts/react-fundamentals/</link>
      <pubDate>Sun, 01 Dec 2024 20:36:06 +0530</pubDate>
      <guid>https://kavindu-udara.github.io/me/posts/react-fundamentals/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Introduction&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;What is React and Why use React ?&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;../react-reusable-components&#34;&gt;React Reusable Components&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;../react-virtual-dom&#34;&gt;React Virtual DOM&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;Large Community Support&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;../real-world-examples-of-apps-build-with-react&#34;&gt;Real-world Examples of apps build with React&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;../setting-up-the-development-environment-for-react-with-vite&#34;&gt;&lt;strong&gt;Setting Up the Development Environment for React with Vite&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Installing Node.js and npm.&lt;/li&gt;&#xA;&lt;li&gt;Setting up a React Project.&lt;/li&gt;&#xA;&lt;li&gt;Overview of the project folder structure.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Understanding JSX / TSX&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;../what-is-jsx-tsx-and-how-ut-differs-from-html&#34;&gt;What is JSX, TSX and How It Differs from HTML&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;JSX/TSX attributes and how to use them.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;../components-in-react&#34;&gt;&lt;strong&gt;Components in React&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Hi! Iâ€™m Kavindu, and I like to make memes and dreams and software.</title>
      <link>https://kavindu-udara.github.io/me/aboutme/aboutme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://kavindu-udara.github.io/me/aboutme/aboutme/</guid>
      <description>&lt;h2 id=&#34;a-student-loves-to-learn-new-things&#34;&gt;A student loves to Learn New Things&lt;/h2&gt;&#xA;&lt;h4 id=&#34;im-the-senior-director-of-developer-advocacy-at-github-outside-of-that-fancy-title-im-a-startup-advisor-and-investor-open-source-er-and-meme-maker-on-the-internet-i-enjoy-building-mechanical-keyboards-playing-music-hanging-out-with-my-family-and-friends-and-teaching-in-my-free-time&#34;&gt;Iâ€™m the Senior Director of Developer Advocacy at GitHub! Outside of that fancy title, Iâ€™m a startup advisor and investor, open source-er, and meme-maker on the internet. I enjoy building mechanical keyboards, playing music, hanging out with my family and friends, and teaching in my free time.&lt;/h4&gt;</description>
    </item>
  </channel>
</rss>
